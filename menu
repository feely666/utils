#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
#INTALLER-UDP
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*/} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipv4.icanhazip.com/timezone)
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipv4.icanhazip.com)
cname=$(awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo)
cores=$(awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo)
freq=$(awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo)
tram=$(free -m | awk 'NR==2 {print $2}')
uram=$(free -m | awk 'NR==2 {print $3}')
fram=$(free -m | awk 'NR==2 {print $4}')
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Download/Upload today
dtoday="$(vnstat -i eth0 | grep "today" | awk '{print $2" "substr ($3, 1, 1)}')"
utoday="$(vnstat -i eth0 | grep "today" | awk '{print $5" "substr ($6, 1, 1)}')"
ttoday="$(vnstat -i eth0 | grep "today" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload yesterday
dyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $2" "substr ($3, 1, 1)}')"
uyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $5" "substr ($6, 1, 1)}')"
tyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload current month
dmon="$(vnstat -i eth0 -m | grep "$(date +"%b '%y")" | awk '{print $3" "substr ($4, 1, 1)}')"
umon="$(vnstat -i eth0 -m | grep "$(date +"%b '%y")" | awk '{print $6" "substr ($7, 1, 1)}')"
tmon="$(vnstat -i eth0 -m | grep "$(date +"%b '%y")" | awk '{print $9" "substr ($10, 1, 1)}')"
clear
# STATUS SERVICE  SSH
if [[ $ssh_service == "running" ]]; then
 status_ssh="${green}ON${NC}"
else
 status_ssh="${RED}OFF${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$(systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
if [[ $ssh_ws == "running" ]]; then
 status_ws_epro="${green}ON${NC}"
else
 status_ws_epro="${RED}OFF${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then
 status_haproxy="${green}ON${NC}"
else
 status_haproxy="${RED}OFF${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then
 status_xray="${green}ON${NC}"
else
 status_xray="${RED}OFF${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then
 status_nginx="${green}ON${NC}"
else
 status_nginx="${RED}OFF${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then
 status_dropbear="${green}ON${NC}"
else
 status_dropbear="${RED}OFF${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m" #REDTERANG
a=" ${z}ACCOUNT PREMIUM"

RED='\033[0;31m'
NC='\e[0m'
gray="\e[1;30m"
Blue="\033[1;36m"
GREEN='\033[0;32m'

BGX="\033[42m"
UPDATE="https://raw.githubusercontent.com/feely666/aio/main/"
clear
r="\033[1;31m" #REDTERANG
a=" ${z}ACCOUNT PREMIUM"
menu() {
 echo -e " "
 echo -e " ${z}${NC}"
 echo -e " ${z}$NC$r › $NC${z} SCRIPT STATUS$NC  ${z}:$NC $sts "
 echo -e " ${z}$NC$r › $NC${z} EXP SCRIPT$NC     ${z}:$green $exp $certifacate Days$NC "
 echo -e " ${z}$NC$r › $NC${z} SYSTEM OS ${NC}     ${z}:$NC $MODEL${NC}"
 echo -e " ${z}$NC$r › $NC${z} CORE SYSTEM ${NC}   ${z}:$NC $CORE${NC}"
 echo -e " ${z}$NC$r › $NC${z} SERVER RAM ${NC}    ${z}:$NC $uram/$RAM MB $NC"
 echo -e " ${z}$NC$r › $NC${z} UPTIME SERVER ${NC} ${z}:$NC $SERONLINE${NC}"
 echo -e " ${z}$NC$r › $NC${z} DOMAIN ${NC}        ${z}:$NC $domain${NC}"
 echo -e " ${z}$NC$r › $NC${z} IP VPS ${NC}        ${z}:$NC $IPVPS${NC}"
 echo -e " ${z}$NC$r › $NC${z} ISP ${NC}           ${z}:$NC $ISP${NC}"
 echo -e " ${z}$NC$r › $NC${z} CITY ${NC}          ${z}:$NC $CITY${NC}"
 echo -e " ${z}$NC$r › $NC${z} ID$NC             ${z}:$NC $username"
 echo -e " ${z}${NC}"
 echo -e " ${z}${NC}"
 echo -e " ${z} ${NC}${z} SSH$NC     : $status_ssh" "    ${z} NGINX$NC    : $status_nginx" "     ${z} XRAY$NC    : $status_xray$NC"
 echo -e " ${z} ${NC}${z} WS-ePRO$NC : $status_ws_epro" "    ${z} DROPBEAR$NC : $status_dropbear" "     ${z} HAPROXY$NC : $status_haproxy$NC"
 echo -e " ${z}${NC}"
 echo -e " ${z}${NC}"
 echo -e " ${z} ${NC}${z} SSH$NC     : $ssh1" "     ${z} VLESS$NC    : $vla" "       ${z} SHDWSK$NC  : $ssa$NC"
 echo -e " ${z} ${NC}${z} VMESS   : $vma" "     ${z} TROJAN$NC   : $trb$NC"
 echo -e " ${z}${NC}"
 echo -e " ${z}${NC}"
 #echo -e " ${z} ${NC}${z}[ 1 ]$NC MENU SSH"        "  ${z}[ 3 ]$NC MENU VLESS"     " ${z}[ 5 ]$NC  MENU SHDWSK${NC}"
 #echo -e " ${z} ${NC}${z}[ 2 ]$NC MENU VMESS" "${z}[ 4 ]$NC MENU TROJAN"
 #echo -e " ${z}${NC}"
 echo -e "[1] SSH Menu"
 echo -e "[2] VMESS Menu"
 echo -e "[3] VLESS Menu"
 echo -e "[4] Trojan Menu"
 echo -e "[5] SHDWSK Menu"
 echo -e ""
}
menu
echo
read -p " Select menu : " opt
echo -e ""
case $opt in
 1)
  clear
  m-sshws
  ;;
 2)
  clear
  m-vmess
  ;;
 3)
  clear
  m-vless
  ;;
 4)
  clear
  m-trojan
  ;;
 5)
  clear
  m-ssws
  ;;
 777)
  clear
  bw
  ;;
 888)
  clear
  speedtest
  ;;
 999)
  clear
  limitspeed
  ;;
 *)
  clear
  menu
  ;;
esac
